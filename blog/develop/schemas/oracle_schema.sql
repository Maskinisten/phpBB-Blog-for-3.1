/*
 * DO NOT EDIT THIS FILE, IT IS GENERATED
 *
 * To change the contents of this file, edit
 * phpBB/develop/create_schema_files.php and
 * run it.
 */

/*
  This first section is optional, however its probably the best method
  of running phpBB on Oracle. If you already have a tablespace and user created
  for phpBB you can leave this section commented out!

  The first set of statements create a phpBB tablespace and a phpBB user,
  make sure you change the password of the phpBB user before you run this script!!
*/

/*
CREATE TABLESPACE "PHPBB"
	LOGGING
	DATAFILE 'E:\ORACLE\ORADATA\LOCAL\PHPBB.ora'
	SIZE 10M
	AUTOEXTEND ON NEXT 10M
	MAXSIZE 100M;

CREATE USER "PHPBB"
	PROFILE "DEFAULT"
	IDENTIFIED BY "phpbb_password"
	DEFAULT TABLESPACE "PHPBB"
	QUOTA UNLIMITED ON "PHPBB"
	ACCOUNT UNLOCK;

GRANT ANALYZE ANY TO "PHPBB";
GRANT CREATE SEQUENCE TO "PHPBB";
GRANT CREATE SESSION TO "PHPBB";
GRANT CREATE TABLE TO "PHPBB";
GRANT CREATE TRIGGER TO "PHPBB";
GRANT CREATE VIEW TO "PHPBB";
GRANT "CONNECT" TO "PHPBB";

COMMIT;
DISCONNECT;

CONNECT phpbb/phpbb_password;
*/
/*
	Table: 'phpbb_blog_categories'
*/
CREATE TABLE phpbb_blog_categories (
	id number(8) NOT NULL,
	name varchar2(765) DEFAULT '' ,
	description clob DEFAULT '' ,
	options number(11) DEFAULT '7' NOT NULL,
	bitfield varchar2(255) DEFAULT '' ,
	uid varchar2(8) DEFAULT '' ,
	total_posts number(8) DEFAULT '0' NOT NULL,
	last_post_id number(8) DEFAULT '0' NOT NULL,
	CONSTRAINT pk_phpbb_blog_categories PRIMARY KEY (id)
)
/


CREATE SEQUENCE phpbb_blog_categories_seq
/

CREATE OR REPLACE TRIGGER t_phpbb_blog_categories
BEFORE INSERT ON phpbb_blog_categories
FOR EACH ROW WHEN (
	new.id IS NULL OR new.id = 0
)
BEGIN
	SELECT phpbb_blog_categories_seq.nextval
	INTO :new.id
	FROM dual;
END;
/


/*
	Table: 'phpbb_blog_posts'
*/
CREATE TABLE phpbb_blog_posts (
	id number(8) NOT NULL,
	category number(8) DEFAULT '0' NOT NULL,
	title varchar2(765) DEFAULT '' ,
	poster_id number(8) DEFAULT '0' NOT NULL,
	post clob DEFAULT '' ,
	options number(11) DEFAULT '7' NOT NULL,
	bitfield varchar2(255) DEFAULT '' ,
	uid varchar2(8) DEFAULT '' ,
	post_time number(11) DEFAULT '0' NOT NULL,
	CONSTRAINT pk_phpbb_blog_posts PRIMARY KEY (id)
)
/

CREATE INDEX phpbb_blog_posts_category ON phpbb_blog_posts (category)
/

CREATE SEQUENCE phpbb_blog_posts_seq
/

CREATE OR REPLACE TRIGGER t_phpbb_blog_posts
BEFORE INSERT ON phpbb_blog_posts
FOR EACH ROW WHEN (
	new.id IS NULL OR new.id = 0
)
BEGIN
	SELECT phpbb_blog_posts_seq.nextval
	INTO :new.id
	FROM dual;
END;
/


